#Combination Sum
def combination_sum(candidates, target):
    def backtrack(start, path, total):
        if total == target:
            result.append(list(path))
            return
        if total > target:
            return
        for i in range(start, len(candidates)):
            path.append(candidates[i])
            backtrack(i, path, total + candidates[i])  # i (not i+1) because reuse allowed
            path.pop()

    result = []
    backtrack(0, [], 0)
    return result


try:
    candidates = list(map(int, input("Enter candidate numbers (space-separated): ").split()))
    target = int(input("Enter target sum: "))

    combinations = combination_sum(candidates, target)

    if combinations:
        print(f"\nFound {len(combinations)} combinations:")
        for idx, comb in enumerate(combinations, 1):
            print(f"{idx}. {comb}")
    else:
        print(" No combinations found that sum to the target.")
except ValueError:
    print("Invalid input. Please enter valid integers.")
